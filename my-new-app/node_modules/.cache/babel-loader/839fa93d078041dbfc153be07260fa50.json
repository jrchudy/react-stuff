{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var referenceSlice=createSlice({name:'reference',initialState:{reference:null,page:null,pageSize:25},// NOTE: no clue what 'state' variable is\nreducers:{getReference:function getReference(state,action){},setReference:function setReference(state,action){console.log(\"setReference payload: \",action);state.reference=action.resolvedReference;},reread:function reread(state,action){action.reference.read(state.pageSize).then(function(page){state.page=page;});},newPageSize:function newPageSize(state,action){state.pageSize=action.payload;// todo call reread reducer instead of reading here\nstate.reference.read(action.payload).then(function(page){state.page=page;});}// selectReference: (state) => {\n//     state.reference\n// }\n}});console.log(referenceSlice);var _referenceSlice$actio=referenceSlice.actions,setReference=_referenceSlice$actio.setReference,reread=_referenceSlice$actio.reread,newPageSize=_referenceSlice$actio.newPageSize;export{setReference,reread,newPageSize};export default referenceSlice.reducer;","map":{"version":3,"sources":["/Users/jchudy/workspace/react-stuff/my-app/src/redux/features/referenceSlice.js"],"names":["createSlice","referenceSlice","name","initialState","reference","page","pageSize","reducers","getReference","state","action","setReference","console","log","resolvedReference","reread","read","then","newPageSize","payload","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,WADgC,CAEtCC,YAAY,CAAE,CACVC,SAAS,CAAE,IADD,CAEVC,IAAI,CAAE,IAFI,CAGVC,QAAQ,CAAE,EAHA,CAFwB,CAOtC;AACAC,QAAQ,CAAE,CACNC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAEhC,CAHK,CAINC,YAAY,CAAE,sBAACF,KAAD,CAAQC,MAAR,CAAmB,CAC7BE,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCH,MAAtC,EACAD,KAAK,CAACL,SAAN,CAAkBM,MAAM,CAACI,iBAAzB,CACH,CAPK,CAQNC,MAAM,CAAE,gBAACN,KAAD,CAAQC,MAAR,CAAmB,CACvBA,MAAM,CAACN,SAAP,CAAiBY,IAAjB,CAAsBP,KAAK,CAACH,QAA5B,EAAsCW,IAAtC,CAA2C,SAAUZ,IAAV,CAAgB,CACvDI,KAAK,CAACJ,IAAN,CAAaA,IAAb,CACH,CAFD,EAGH,CAZK,CAaNa,WAAW,CAAE,qBAACT,KAAD,CAAQC,MAAR,CAAmB,CAC5BD,KAAK,CAACH,QAAN,CAAiBI,MAAM,CAACS,OAAxB,CACA;AACAV,KAAK,CAACL,SAAN,CAAgBY,IAAhB,CAAqBN,MAAM,CAACS,OAA5B,EAAqCF,IAArC,CAA0C,SAAUZ,IAAV,CAAgB,CACtDI,KAAK,CAACJ,IAAN,CAAaA,IAAb,CACH,CAFD,EAGH,CACD;AACA;AACA;AAtBM,CAR4B,CAAD,CAAlC,CAkCPO,OAAO,CAACC,GAAR,CAAYZ,cAAZ,EAEO,0BAA8CA,cAAc,CAACmB,OAA7D,CAAQT,YAAR,uBAAQA,YAAR,CAAsBI,MAAtB,uBAAsBA,MAAtB,CAA8BG,WAA9B,uBAA8BA,WAA9B,C,wCAEP,cAAejB,CAAAA,cAAc,CAACoB,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const referenceSlice = createSlice({\n    name: 'reference',\n    initialState: {\n        reference: null,\n        page: null,\n        pageSize: 25\n    },\n    // NOTE: no clue what 'state' variable is\n    reducers: {\n        getReference: (state, action) => {\n\n        },\n        setReference: (state, action) => {\n            console.log(\"setReference payload: \", action);\n            state.reference = action.resolvedReference\n        },\n        reread: (state, action) => {\n            action.reference.read(state.pageSize).then(function (page) {\n                state.page = page;\n            });\n        },\n        newPageSize: (state, action) => {\n            state.pageSize = action.payload;\n            // todo call reread reducer instead of reading here\n            state.reference.read(action.payload).then(function (page) {\n                state.page = page;\n            })\n        }\n        // selectReference: (state) => {\n        //     state.reference\n        // }\n    }\n});\n\nconsole.log(referenceSlice);\n\nexport const { setReference, reread, newPageSize } = referenceSlice.actions\n\nexport default referenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}