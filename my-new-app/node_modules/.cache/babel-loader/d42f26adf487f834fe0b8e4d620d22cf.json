{"ast":null,"code":"import _classCallCheck from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Axios from'axios';import ReactRedux from'react-redux';// var refSlice = require('../redux/features/referenceSlice');\n// var TableHeader = require('./TableHeader');\n// var RecordsetTable = require('./RecordsetTable');\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Recordset=/*#__PURE__*/function(_React$Component){_inherits(Recordset,_React$Component);var _super=_createSuper(Recordset);function Recordset(props){var _this;_classCallCheck(this,Recordset);_this=_super.call(this,props);_this.state={};return _this;}// getReference: ReactRedux.useSelector(refSlice.actions.selectReference),\n_createClass(Recordset,[{key:\"setReference\",value:function setReference(){useDispatch(refSlice.actions.setReference);}// fires when the component is attached to the DOM\n},{key:\"componentDidMount\",value:function componentDidMount(){var self=this;var config={skipRetryBrowserError:true,skipHTTP401Handling:true};ERMrest.configure(Axios,Q);ERMrest.onload().then(function(){ERMrest.appLinkFn(function appTagToURL(tag,location,context){var appPath;if(tag&&tag in appTagMapping){appPath=appTagMapping[tag];}else{var getValueFromContext=function getValueFromContext(object,context){var partial=context,parts=context.split(\"/\");while(partial!==\"\"){if(partial in object){// found the context\nreturn object[partial];}parts.splice(-1,1);// remove the last part\npartial=parts.join(\"/\");}return object[\"*\"];};var appContextMapping={detailed:\"/record\",compact:\"/recordset\",edit:\"/recordedit\",entry:\"/recordedit\"};appContextMapping['*']=\"/record\";appPath=getValueFromContext(appContextMapping,context);}var url=\"https://dev.isrd.isi.edu/~jchudy/chaise\"+appPath+\"/#\"+location.catalog+\"/\"+location.path;var pcontext=[];// var settingsObj = ConfigUtils.getSettings()\nvar settingsObj={};// var contextHeaderParams = ConfigUtils.getContextHeaderParams();\nvar contextHeaderParams={};pcontext.push(\"pcid=\"+contextHeaderParams.cid);pcontext.push(\"ppid=\"+contextHeaderParams.pid);// only add the value to the applink function if it's true\nif(settingsObj.hideNavbar)pcontext.push(\"hideNavbar=\"+settingsObj.hideNavbar);// TODO we might want to allow only certian query parameters\nif(location.queryParamsString){url=url+\"?\"+location.queryParamsString;}if(pcontext.length>0){url=url+(location.queryParamsString?\"&\":\"?\")+pcontext.join(\"&\");}return url;});return ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/isa:dataset\",config);}).then(function(reference){console.log(self);self.setReference();self.setState({reference:reference.contextualize.compact});return self.state.reference.read(25);}).then(function(page){self.setState({page:page,tuples:page.tuples,isLoaded:true});console.log(\"Table state: \",self.state);}).catch(function(err){console.log(err);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState,snapshot){// console.log(\"Recordset did update\")\n// console.log(\"prev props: \", prevProps);\n// console.log(\"prev state: \", prevState);\n}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){console.log(\"recordset next props: \",nextProps);console.log(\"recordset next state: \",nextState);var referenceChanged=this.state.reference!=nextState.reference;var pageChanged=this.state.page!=nextState.page;console.log(\"reference change: \",referenceChanged);console.log(\"page change: \",pageChanged);return referenceChanged||pageChanged;}},{key:\"renderDisplayName\",value:function renderDisplayName(){if(this.state.isLoaded){var displaynameObj=this.state.reference.displayname;return/*#__PURE__*/_jsx(\"h2\",{children:displaynameObj.isHTML?/*#__PURE__*/_jsx(\"span\",{className:\"markdown-container\",dangerouslySetInnerHTML:{__html:displaynameObj.value}}):/*#__PURE__*/_jsx(\"span\",{children:displaynameObj.value})});}}},{key:\"render\",value:function render(){// <TableHeader style={{margin: \"10px 0\"}} reference={this.state.reference} />\n// <RecordsetTable className=\"recordset-table-container\" />\nreturn/*#__PURE__*/_jsx(\"div\",{children:this.renderDisplayName()});}}]);return Recordset;}(React.Component);export default Recordset;","map":{"version":3,"sources":["/Users/jchudy/workspace/react-stuff/my-app/src/components/recordset.js"],"names":["React","Axios","ReactRedux","Recordset","props","state","useDispatch","refSlice","actions","setReference","self","config","skipRetryBrowserError","skipHTTP401Handling","ERMrest","configure","Q","onload","then","appLinkFn","appTagToURL","tag","location","context","appPath","appTagMapping","getValueFromContext","object","partial","parts","split","splice","join","appContextMapping","detailed","compact","edit","entry","url","catalog","path","pcontext","settingsObj","contextHeaderParams","push","cid","pid","hideNavbar","queryParamsString","length","resolve","reference","console","log","setState","contextualize","read","page","tuples","isLoaded","catch","err","prevProps","prevState","snapshot","nextProps","nextState","referenceChanged","pageChanged","displaynameObj","displayname","isHTML","__html","value","renderDisplayName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\nimport ReactRedux from 'react-redux';\n\n// var refSlice = require('../redux/features/referenceSlice');\n// var TableHeader = require('./TableHeader');\n// var RecordsetTable = require('./RecordsetTable');\nclass Recordset extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    // getReference: ReactRedux.useSelector(refSlice.actions.selectReference),\n    setReference() {\n        useDispatch(refSlice.actions.setReference)\n    }\n\n    // fires when the component is attached to the DOM\n    componentDidMount() {\n      var self = this;\n      var config = {skipRetryBrowserError: true, skipHTTP401Handling: true};\n      ERMrest.configure(Axios, Q);\n      ERMrest.onload().then(function () {\n          ERMrest.appLinkFn(function appTagToURL(tag, location, context) {\n              var appPath;\n              if (tag && (tag in appTagMapping)) {\n                  appPath = appTagMapping[tag];\n              } else {\n                  function getValueFromContext(object, context) {\n                      var partial = context,\n                      parts = context.split(\"/\");\n                      while (partial !== \"\") {\n                          if (partial in object) { // found the context\n                              return object[partial];\n                          }\n                          parts.splice(-1,1); // remove the last part\n                          partial = parts.join(\"/\");\n                      }\n                      return object[\"*\"];\n                  }\n\n                  const appContextMapping = {\n                      detailed: \"/record\",\n                      compact: \"/recordset\",\n                      edit: \"/recordedit\",\n                      entry: \"/recordedit\"\n                  }\n                  appContextMapping['*'] = \"/record\";\n\n                  appPath = getValueFromContext(appContextMapping, context);\n              }\n\n              var url = \"https://dev.isrd.isi.edu/~jchudy/chaise\" + appPath + \"/#\" + location.catalog + \"/\" + location.path;\n              var pcontext = [];\n\n              // var settingsObj = ConfigUtils.getSettings()\n              var settingsObj = {};\n              // var contextHeaderParams = ConfigUtils.getContextHeaderParams();\n              var contextHeaderParams = {};\n              pcontext.push(\"pcid=\" + contextHeaderParams.cid);\n              pcontext.push(\"ppid=\" + contextHeaderParams.pid);\n              // only add the value to the applink function if it's true\n              if (settingsObj.hideNavbar) pcontext.push(\"hideNavbar=\" + settingsObj.hideNavbar)\n\n              // TODO we might want to allow only certian query parameters\n              if (location.queryParamsString) {\n                  url = url + \"?\" + location.queryParamsString;\n              }\n              if (pcontext.length > 0) {\n                  url = url + (location.queryParamsString ? \"&\" : \"?\") + pcontext.join(\"&\");\n              }\n              return url;\n          });\n\n          return ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/isa:dataset\", config);\n      }).then(function (reference) {\n          console.log(self)\n          self.setReference();\n\n          self.setState({\n              reference: reference.contextualize.compact\n          });\n\n          return self.state.reference.read(25);\n      }).then(function (page) {\n\n          self.setState({\n              page: page,\n              tuples: page.tuples,\n              isLoaded: true\n          });\n\n          console.log(\"Table state: \", self.state);\n      }).catch(function (err) {\n          console.log(err)\n      });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log(\"Recordset did update\")\n        // console.log(\"prev props: \", prevProps);\n        // console.log(\"prev state: \", prevState);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log(\"recordset next props: \", nextProps)\n        console.log(\"recordset next state: \", nextState)\n        var referenceChanged = this.state.reference != nextState.reference\n        var pageChanged = this.state.page != nextState.page\n        console.log(\"reference change: \", referenceChanged);\n        console.log(\"page change: \", pageChanged);\n        return referenceChanged || pageChanged\n    }\n\n    renderDisplayName() {\n        if (this.state.isLoaded) {\n            var displaynameObj = this.state.reference.displayname;\n            return (<h2>\n                {displaynameObj.isHTML\n                    ? <span className=\"markdown-container\" dangerouslySetInnerHTML={{ __html: displaynameObj.value }}></span>\n                    : <span>{displaynameObj.value}</span>\n                }\n              </h2>)\n        }\n    }\n\n    render() {\n        // <TableHeader style={{margin: \"10px 0\"}} reference={this.state.reference} />\n        // <RecordsetTable className=\"recordset-table-container\" />\n        return(<div>\n            {this.renderDisplayName()}\n            </div>);\n    }\n}\n\nexport default Recordset;\n"]},"metadata":{},"sourceType":"module"}