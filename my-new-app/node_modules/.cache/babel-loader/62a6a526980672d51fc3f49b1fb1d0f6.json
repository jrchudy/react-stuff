{"ast":null,"code":"import _slicedToArray from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useEffect,useState}from'react';import Axios from'axios';import{useDispatch,useSelector}from'react-redux';import store from'./redux/store';import Recordset from'./components/Recordset';import Record from'./components/Record';import{jsx as _jsx}from\"react/jsx-runtime\";var App=function App(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),reference=_useState2[0],setReference=_useState2[1];var _useState3=useState(\"Recordset\"),_useState4=_slicedToArray(_useState3,2),appState=_useState4[0],setAppState=_useState4[1];var dispatch=useDispatch();// gets the named reducer from the store, see redux/store\nvar referenceStore=useSelector(function(state){return state.reference;});// component mounted, fetch the initial reference and read the data\nuseEffect(function(){if(!props.fetched){var self=_this;var config={skipRetryBrowserError:true,skipHTTP401Handling:true};ERMrest.configure(Axios,Q);ERMrest.onload().then(function(){ERMrest.appLinkFn(function appTagToURL(tag,location,context){var appPath;if(tag&&tag in appTagMapping){appPath=appTagMapping[tag];}else{var getValueFromContext=function getValueFromContext(object,context){var partial=context,parts=context.split(\"/\");while(partial!==\"\"){if(partial in object){// found the context\nreturn object[partial];}parts.splice(-1,1);// remove the last part\npartial=parts.join(\"/\");}return object[\"*\"];};var appContextMapping={detailed:\"/record\",compact:\"/recordset\",edit:\"/recordedit\",entry:\"/recordedit\"};appContextMapping['*']=\"/record\";appPath=getValueFromContext(appContextMapping,context);}var url=\"https://dev.isrd.isi.edu/~jchudy/chaise\"+appPath+\"/#\"+location.catalog+\"/\"+location.path;var pcontext=[];// var settingsObj = ConfigUtils.getSettings()\nvar settingsObj={};// var contextHeaderParams = ConfigUtils.getContextHeaderParams();\nvar contextHeaderParams={};pcontext.push(\"pcid=\"+contextHeaderParams.cid);pcontext.push(\"ppid=\"+contextHeaderParams.pid);// only add the value to the applink function if it's true\nif(settingsObj.hideNavbar)pcontext.push(\"hideNavbar=\"+settingsObj.hideNavbar);// TODO we might want to allow only certian query parameters\nif(location.queryParamsString){url=url+\"?\"+location.queryParamsString;}if(pcontext.length>0){url=url+(location.queryParamsString?\"&\":\"?\")+pcontext.join(\"&\");}return url;});return ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/isa:dataset\",config);}).then(function(resolvedReference){var ref=resolvedReference.contextualize.compact;setReference(ref);// dispatch to reducer.name + / + reducer.action (reference/setReference)\nstore.dispatch({type:\"reference/setReference\",resolvedReference:ref});props.fetched=true;}).catch(function(err){console.log(err);});}},[]);useEffect(function(){if(referenceStore&&referenceStore.appState!=appState){var appName=referenceStore.appState;ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/\"+referenceStore.referencePath).then(function(resolvedReference){setAppState(appName);var ref;if(appName==\"Record\"){ref=resolvedReference.contextualize.detailed;}else if(appName==\"Recordedit\"){ref=resolvedReference.contextualize.entryCreate;}else{ref=resolvedReference.contextualize.compact;}setReference(ref);store.dispatch({type:\"reference/setReference\",resolvedReference:ref});}).catch(function(err){console.log(err);});}},[referenceStore,dispatch]);var renderApp=function renderApp(){if(appState==\"Record\"){return/*#__PURE__*/_jsx(Record,{});}else if(appState==\"Recordedit\"){return/*#__PURE__*/_jsx(Recordedit,{});}else{return/*#__PURE__*/_jsx(Recordset,{});}};return/*#__PURE__*/_jsx(\"div\",{children:renderApp()});};export default App;","map":{"version":3,"sources":["/Users/jchudy/workspace/react-stuff/my-app/src/App.js"],"names":["React","useEffect","useState","Axios","useDispatch","useSelector","store","Recordset","Record","App","props","reference","setReference","appState","setAppState","dispatch","referenceStore","state","fetched","self","config","skipRetryBrowserError","skipHTTP401Handling","ERMrest","configure","Q","onload","then","appLinkFn","appTagToURL","tag","location","context","appPath","appTagMapping","getValueFromContext","object","partial","parts","split","splice","join","appContextMapping","detailed","compact","edit","entry","url","catalog","path","pcontext","settingsObj","contextHeaderParams","push","cid","pid","hideNavbar","queryParamsString","length","resolve","resolvedReference","ref","contextualize","type","catch","err","console","log","appName","referencePath","entryCreate","renderApp"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport store from './redux/store';\n\nimport Recordset from './components/Recordset';\nimport Record from './components/Record';\n\nconst App = (props) => {\n    var [reference, setReference]   = useState(null);\n    var [appState, setAppState]     = useState(\"Recordset\");\n\n    const dispatch = useDispatch();\n    // gets the named reducer from the store, see redux/store\n    const referenceStore = useSelector(state => state.reference);\n\n    // component mounted, fetch the initial reference and read the data\n    useEffect(() => {\n        if(!props.fetched) {\n            var self = this;\n            var config = {skipRetryBrowserError: true, skipHTTP401Handling: true};\n            ERMrest.configure(Axios, Q);\n            ERMrest.onload().then(function () {\n                ERMrest.appLinkFn(function appTagToURL(tag, location, context) {\n                    var appPath;\n                    if (tag && (tag in appTagMapping)) {\n                        appPath = appTagMapping[tag];\n                    } else {\n                        function getValueFromContext(object, context) {\n                            var partial = context,\n                            parts = context.split(\"/\");\n                            while (partial !== \"\") {\n                                if (partial in object) { // found the context\n                                    return object[partial];\n                                }\n                                parts.splice(-1,1); // remove the last part\n                                partial = parts.join(\"/\");\n                            }\n                            return object[\"*\"];\n                        }\n\n                        const appContextMapping = {\n                            detailed: \"/record\",\n                            compact: \"/recordset\",\n                            edit: \"/recordedit\",\n                            entry: \"/recordedit\"\n                        }\n                        appContextMapping['*'] = \"/record\";\n\n                        appPath = getValueFromContext(appContextMapping, context);\n                    }\n\n                    var url = \"https://dev.isrd.isi.edu/~jchudy/chaise\" + appPath + \"/#\" + location.catalog + \"/\" + location.path;\n                    var pcontext = [];\n\n                    // var settingsObj = ConfigUtils.getSettings()\n                    var settingsObj = {};\n                    // var contextHeaderParams = ConfigUtils.getContextHeaderParams();\n                    var contextHeaderParams = {};\n                    pcontext.push(\"pcid=\" + contextHeaderParams.cid);\n                    pcontext.push(\"ppid=\" + contextHeaderParams.pid);\n                    // only add the value to the applink function if it's true\n                    if (settingsObj.hideNavbar) pcontext.push(\"hideNavbar=\" + settingsObj.hideNavbar)\n\n                    // TODO we might want to allow only certian query parameters\n                    if (location.queryParamsString) {\n                        url = url + \"?\" + location.queryParamsString;\n                    }\n                    if (pcontext.length > 0) {\n                        url = url + (location.queryParamsString ? \"&\" : \"?\") + pcontext.join(\"&\");\n                    }\n                    return url;\n                });\n\n                return ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/isa:dataset\", config);\n            }).then(function (resolvedReference) {\n                let ref = resolvedReference.contextualize.compact;\n                setReference(ref);\n                // dispatch to reducer.name + / + reducer.action (reference/setReference)\n                store.dispatch({ type: \"reference/setReference\", resolvedReference: ref });\n\n                props.fetched = true;\n            }).catch(function (err) {\n                console.log(err)\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (referenceStore && referenceStore.appState != appState) {\n            let appName = referenceStore.appState;\n            ERMrest.resolve(\"https://dev.isrd.isi.edu/ermrest/catalog/1/entity/\" + referenceStore.referencePath).then(function (resolvedReference) {\n                setAppState(appName);\n\n                let ref;\n                if (appName == \"Record\") {\n                    ref = resolvedReference.contextualize.detailed;\n                } else if (appName == \"Recordedit\") {\n                    ref = resolvedReference.contextualize.entryCreate;\n                } else {\n                    ref = resolvedReference.contextualize.compact;\n                }\n\n                setReference(ref);\n                store.dispatch({ type: \"reference/setReference\", resolvedReference: ref });\n\n            }).catch(function (err) {\n                console.log(err)\n            });\n        }\n    }, [referenceStore, dispatch])\n\n    const renderApp = () => {\n        if (appState == \"Record\") {\n            return (<Record />)\n        } else if (appState == \"Recordedit\") {\n            return (<Recordedit />)\n        } else {\n            return (<Recordset />)\n        }\n    }\n\n    return(<div>\n        {renderApp()}\n    </div>);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}