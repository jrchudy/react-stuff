{"ast":null,"code":"import _slicedToArray from\"/Users/jchudy/workspace/react-stuff/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RecordsetTable=function RecordsetTable(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),referenceLoaded=_useState2[0],setReferenceLoaded=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pageLoaded=_useState4[0],setPageLoaded=_useState4[1];var dispatch=useDispatch();// NOTE: whole state currently?\nvar reference=useSelector(function(state){return state.reference;});var page=useSelector(function(state){return state.page;});// component mounted\nuseEffect(function(){// do nothing currently since has to wait for reference to resolve\nconsole.log(\"Recordset Table mounted\");},[]);// when reference store variable is set or changes, set loaded true\nuseEffect(function(){if(reference&&reference.reference){console.log(reference);setReferenceLoaded(true);}},[reference,dispatch]);// when page store variable is set or changes, set loaded true\nuseEffect(function(){console.log(\"use effect page: \",page);if(page&&page.page){setPageLoaded(true);}},[page,dispatch]);var renderColumnHeaders=function renderColumnHeaders(){if(referenceLoaded){return reference.reference.columns.map(function(column,index){// how to add conditional class/tooltip\n// ng-class=\"{'chaise-icon-for-tooltip': col.column.comment}\"\nvar columnName=column.displayname.value;return/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"table-column-displayname\",\"tooltip-placement\":\"auto top\",children:column.displayname.isHTML?/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:columnName}}):/*#__PURE__*/_jsx(\"span\",{children:columnName})})},index);});}};var renderTableData=function renderTableData(){if(pageLoaded){return page.page.tuples.map(function(tuple,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"action-btns\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chaise-btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"apply-saved-query-button chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\",children:/*#__PURE__*/_jsx(\"span\",{className:\"chaise-btn-icon glyphicon glyphicon-check\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"view-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\",children:/*#__PURE__*/_jsx(\"span\",{className:\"chaise-btn-icon chaise-icon chaise-view-details\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\",children:/*#__PURE__*/_jsx(\"span\",{className:\"chaise-btn-icon glyphicon glyphicon-pencil\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\",children:/*#__PURE__*/_jsx(\"span\",{className:\"chaise-btn-icon far fa-trash-alt\"})})]})}),renderTableCell(tuple)]},index);});}};var renderTableCell=function renderTableCell(tuple){if(isLoaded){return tuple.values.map(function(value,index){var isHTML=tuple.isHTML[index];return/*#__PURE__*/_jsx(\"td\",{children:isHTML?/*#__PURE__*/_jsx(\"span\",{className:\"markdown-container\",dangerouslySetInnerHTML:{__html:value}}):/*#__PURE__*/_jsx(\"span\",{children:value})},index);});}};return/*#__PURE__*/_jsx(\"div\",{className:\"outer-table recordset-table\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table chaise-table table-striped table-hover\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-heading\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"actions-header\",children:\"Actions\"}),renderColumnHeaders()]})}),/*#__PURE__*/_jsx(\"tbody\",{children:renderTableData()})]})});};export default RecordsetTable;","map":{"version":3,"sources":["/Users/jchudy/workspace/react-stuff/my-app/src/components/RecordsetTable.js"],"names":["React","useEffect","useState","useDispatch","useSelector","RecordsetTable","props","referenceLoaded","setReferenceLoaded","pageLoaded","setPageLoaded","dispatch","reference","state","page","console","log","renderColumnHeaders","columns","map","column","index","columnName","displayname","value","isHTML","__html","renderTableData","tuples","tuple","renderTableCell","isLoaded","values"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst RecordsetTable = (props) => {\n    const [referenceLoaded, setReferenceLoaded]     = useState(false);\n    const [pageLoaded, setPageLoaded]               = useState(false);\n\n    const dispatch = useDispatch();\n    // NOTE: whole state currently?\n    const reference = useSelector(state => state.reference);\n    const page = useSelector(state => state.page);\n\n    // component mounted\n    useEffect(() => {\n        // do nothing currently since has to wait for reference to resolve\n        console.log(\"Recordset Table mounted\");\n    }, []);\n\n    // when reference store variable is set or changes, set loaded true\n    useEffect(() => {\n        if (reference && reference.reference) {\n            console.log(reference);\n            setReferenceLoaded(true);\n        }\n    }, [reference, dispatch]);\n\n    // when page store variable is set or changes, set loaded true\n    useEffect(() => {\n        console.log(\"use effect page: \", page);\n        if (page && page.page) {\n            setPageLoaded(true);\n        }\n    }, [page, dispatch]);\n\n    const renderColumnHeaders = () => {\n        if (referenceLoaded) {\n            return reference.reference.columns.map((column, index) => {\n                // how to add conditional class/tooltip\n                // ng-class=\"{'chaise-icon-for-tooltip': col.column.comment}\"\n                var columnName = column.displayname.value;\n                return (<th key={index}>\n                    <span className=\"table-column-displayname\" tooltip-placement=\"auto top\">\n                      {column.displayname.isHTML\n                          ? <span dangerouslySetInnerHTML={{ __html: columnName }}></span>\n                          : <span>{columnName}</span>\n                      }\n                    </span>\n                  </th>)\n            });\n        }\n    }\n\n    const renderTableData = () => {\n        if (pageLoaded) {\n            return page.page.tuples.map((tuple, index) => {\n               return (<tr key={index}>\n                   <td className=\"action-btns\">\n                      <div className=\"chaise-btn-group\">\n                          <button className=\"apply-saved-query-button chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\"><span className=\"chaise-btn-icon glyphicon glyphicon-check\"></span></button>\n                          <button className=\"view-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\"><span className=\"chaise-btn-icon chaise-icon chaise-view-details\"></span></button>\n                          <button className=\"edit-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\"><span className=\"chaise-btn-icon glyphicon glyphicon-pencil\"></span></button>\n                          <button className=\"delete-action-btn chaise-btn chaise-btn-tertiary chaise-btn-link icon-btn\"><span className=\"chaise-btn-icon far fa-trash-alt\"></span></button>\n                      </div>\n                   </td>\n                   {renderTableCell(tuple)}\n                 </tr>)\n            });\n        }\n    }\n\n    const renderTableCell = (tuple) => {\n        if (isLoaded) {\n            return tuple.values.map((value, index) => {\n                const isHTML = tuple.isHTML[index];\n                return (<td key={index}>\n                    {isHTML\n                        ? <span className=\"markdown-container\" dangerouslySetInnerHTML={{ __html: value }}></span>\n                        : <span>{value}</span>\n                    }\n                </td>)\n            })\n        }\n    }\n\n    return(<div className=\"outer-table recordset-table\">\n        <table className=\"table chaise-table table-striped table-hover\">\n            <thead className=\"table-heading\">\n                <tr>\n                    <th className=\"actions-header\">Actions</th>\n                    {renderColumnHeaders()}\n                </tr>\n            </thead>\n            <tbody>{renderTableData()}</tbody>\n        </table>\n    </div>);\n}\n\nexport default RecordsetTable;\n"]},"metadata":{},"sourceType":"module"}