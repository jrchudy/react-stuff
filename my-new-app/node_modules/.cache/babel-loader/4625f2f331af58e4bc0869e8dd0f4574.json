{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var referenceSlice=createSlice({name:'reference',initialState:{reference:null,page:null,pageSize:25},// NOTE: no clue what 'state' variable is\nreducers:{setReference:function setReference(state,action){console.log(\"setReference payload: \",action);state.reference=action.resolvedReference;},setPage:function setPage(state,action){console.log(\"setPage payload: \",action);state.page=action.refPage;},reread:function reread(state,action){// given action.reference, read the next/previous page\naction.reference.read(state.pageSize).then(function(page){state.page=page;}).catch(function(err){console.log(err);});},newPageSize:function newPageSize(state,action){// given action.pageSize, reread the current reference\nstate.pageSize=parseInt(action.pageSize);}}});// NOTE: in theory, you can export the actions so they can be referenced in other files instead of calling \"slice.name/actionName\"\nvar _referenceSlice$actio=referenceSlice.actions,setReference=_referenceSlice$actio.setReference,setPage=_referenceSlice$actio.setPage,reread=_referenceSlice$actio.reread,newPageSize=_referenceSlice$actio.newPageSize;export{setReference,setPage,reread,newPageSize};export default referenceSlice.reducer;","map":{"version":3,"sources":["/Users/jchudy/workspace/react-stuff/my-app/src/redux/features/referenceSlice.js"],"names":["createSlice","referenceSlice","name","initialState","reference","page","pageSize","reducers","setReference","state","action","console","log","resolvedReference","setPage","refPage","reread","read","then","catch","err","newPageSize","parseInt","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,WADgC,CAEtCC,YAAY,CAAE,CACVC,SAAS,CAAE,IADD,CAEVC,IAAI,CAAE,IAFI,CAGVC,QAAQ,CAAE,EAHA,CAFwB,CAOtC;AACAC,QAAQ,CAAE,CACNC,YAAY,CAAE,sBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC7BC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCF,MAAtC,EACAD,KAAK,CAACL,SAAN,CAAkBM,MAAM,CAACG,iBAAzB,CACH,CAJK,CAKNC,OAAO,CAAE,iBAACL,KAAD,CAAQC,MAAR,CAAmB,CACxBC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAiCF,MAAjC,EACAD,KAAK,CAACJ,IAAN,CAAaK,MAAM,CAACK,OAApB,CACH,CARK,CASNC,MAAM,CAAE,gBAACP,KAAD,CAAQC,MAAR,CAAmB,CACvB;AACAA,MAAM,CAACN,SAAP,CAAiBa,IAAjB,CAAsBR,KAAK,CAACH,QAA5B,EAAsCY,IAAtC,CAA2C,SAAUb,IAAV,CAAgB,CACvDI,KAAK,CAACJ,IAAN,CAAaA,IAAb,CACH,CAFD,EAEGc,KAFH,CAES,SAAUC,GAAV,CAAe,CACpBT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,EACH,CAJD,EAKH,CAhBK,CAiBNC,WAAW,CAAE,qBAACZ,KAAD,CAAQC,MAAR,CAAmB,CAC5B;AACAD,KAAK,CAACH,QAAN,CAAiBgB,QAAQ,CAACZ,MAAM,CAACJ,QAAR,CAAzB,CACH,CApBK,CAR4B,CAAD,CAAlC,CAgCP;AACO,0BAAuDL,cAAc,CAACsB,OAAtE,CAAQf,YAAR,uBAAQA,YAAR,CAAsBM,OAAtB,uBAAsBA,OAAtB,CAA+BE,MAA/B,uBAA+BA,MAA/B,CAAuCK,WAAvC,uBAAuCA,WAAvC,C,gDAEP,cAAepB,CAAAA,cAAc,CAACuB,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const referenceSlice = createSlice({\n    name: 'reference',\n    initialState: {\n        reference: null,\n        page: null,\n        pageSize: 25\n    },\n    // NOTE: no clue what 'state' variable is\n    reducers: {\n        setReference: (state, action) => {\n            console.log(\"setReference payload: \", action);\n            state.reference = action.resolvedReference;\n        },\n        setPage: (state, action) => {\n            console.log(\"setPage payload: \", action);\n            state.page = action.refPage;\n        },\n        reread: (state, action) => {\n            // given action.reference, read the next/previous page\n            action.reference.read(state.pageSize).then(function (page) {\n                state.page = page;\n            }).catch(function (err) {\n                console.log(err)\n            });\n        },\n        newPageSize: (state, action) => {\n            // given action.pageSize, reread the current reference\n            state.pageSize = parseInt(action.pageSize);\n        }\n    }\n});\n\n// NOTE: in theory, you can export the actions so they can be referenced in other files instead of calling \"slice.name/actionName\"\nexport const { setReference, setPage, reread, newPageSize } = referenceSlice.actions\n\nexport default referenceSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}